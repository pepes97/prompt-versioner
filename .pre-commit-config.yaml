# .pre-commit-config.yaml
repos:
  # Pulizia file "banali" prima di toccare il codice
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: end-of-file-fixer         # newline finale
      - id: trailing-whitespace       # niente spazi a fine riga
      - id: check-merge-conflict      # evita di committare <<<<<<< HEAD
      - id: check-yaml
        args: ["--allow-multiple-documents"]  # <— consenti multi-docs
      - id: check-toml

  # Ruff: lint + fix velocissimo (prima di Black)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.13.1
    hooks:
      - id: ruff
        args: [--fix]                 # auto-fix dove possibile
        types: [python]

  # Black: format coerente (dopo Ruff)
  - repo: https://github.com/psf/black
    rev: 25.9.0
    hooks:
      - id: black
        types: [python]


  # SECURITY CHECKS
  # Bandit: analisi statica vulnerabilità
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: [
          "-f", "custom",
          "--msg-template", "{abspath}:{line}: {test_id}[bandit]: {severity}: {msg}"
        ]
        types: [python]

  # SECURITY CHECKS
  # pip-audit: controllo vulnerabilità dipendenze
  - repo: https://github.com/pypa/pip-audit
    rev: v2.9.0
    hooks:
      - id: pip-audit
        args: [
          "--desc=on", # Descrizioni dettagliate (on/off/auto)
          "--format=json",
          "--ignore-vuln=CVE-2025-8869"
        ]

  # Mypy: type checking SOLO su src/app (usa l'ambiente Poetry del progetto)
  - repo: local
    hooks:
      - id: mypy
        name: mypy (prompt_versioner/)
        entry: poetry run mypy
        language: system              # usa la tua venv (quella Poetry)
        pass_filenames: false         # non passare i singoli file
        args: ["prompt_versioner/"]             # controlla SOLO src/app
        types: [python]
